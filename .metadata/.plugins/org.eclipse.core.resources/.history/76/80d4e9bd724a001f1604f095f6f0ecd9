package com.example.AI_Diary.controller;

import com.example.AI_Diary.model.Diary;
import com.example.AI_Diary.model.User;
import com.example.AI_Diary.service.DiaryService;
import com.example.AI_Diary.service.SentimentAnalysisService;
import com.example.AI_Diary.service.UserService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

import java.time.LocalDateTime;
import java.util.List;

@Controller
@RequestMapping("/diary")
public class DiaryController {

    @Autowired
    private DiaryService diaryService;

    @Autowired
    private SentimentAnalysisService sentimentAnalysisService;
    
    @Autowired
    private UserService userService;

    @GetMapping
    public String diaryPage(Model model, @AuthenticationPrincipal UserDetails userDetails) {
        User user = userService.findByUsername(userDetails.getUsername()).orElseThrow(() -> new RuntimeException("User not found"));
        List<Diary> diaries = diaryService.findByUserId(user.getId());
        model.addAttribute("entries", diaries);
        return "diary";
    }

    @PostMapping
    public String addEntry(@RequestParam String title, @RequestParam String content, @AuthenticationPrincipal UserDetails userDetails) {
        User user = userService.findByUsername(userDetails.getUsername()).orElseThrow(() -> new RuntimeException("User not found"));

        Diary diary = new Diary();
        diary.setTitle(title);
        diary.setContent(content);
        diary.setCreatedAt(LocalDateTime.now());
        diary.setEmotion(sentimentAnalysisService.analyzeSentiment(content));
        diary.setUser(user);

        diaryService.saveDiary(diary);
        return "redirect:/diary";
    }
}
