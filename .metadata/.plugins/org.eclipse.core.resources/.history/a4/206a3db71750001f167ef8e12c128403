//package com.example.AI_Diary.model;
//
////package com.example.AI_Diary.model;
////
////import java.time.LocalDateTime;
////import java.util.ArrayList;
////import java.util.List;
////
////import jakarta.persistence.CollectionTable;
////import jakarta.persistence.Column;
////import jakarta.persistence.ElementCollection;
////import jakarta.persistence.Entity;
////import jakarta.persistence.GeneratedValue;
////import jakarta.persistence.GenerationType;
////import jakarta.persistence.Id;
////import jakarta.persistence.JoinColumn;
////import jakarta.persistence.Lob;
////import jakarta.persistence.Transient;
////
////@Entity
////public class Diary {
////    @Id
////    @GeneratedValue(strategy = GenerationType.IDENTITY)
////    private Long id;
////
////    private String title;
////
////    @Column(columnDefinition = "TEXT")
////    private String content;
////
////    private String emotion;
////
////    @Lob
////    @ElementCollection
////    @CollectionTable(name = "diary_images", joinColumns = @JoinColumn(name = "diary_id"))
////    @Column(name = "image")
////    private List<byte[]> images = new ArrayList<>();
////
////    @Transient
////    private List<String> base64Images = new ArrayList<>();
////    
////    private Long userId;
////    
////    @ElementCollection
////    @CollectionTable(name = "tags", joinColumns = @JoinColumn(name = "diary_id"))
////    @Column(name = "tag")
////    private List<String> tags = new ArrayList<>();
////
////    @Column(name = "created_at")
////    private LocalDateTime createdAt;
////    
////    private String errorMessage;
////
////    // 기본 생성자
////    public Diary() {
////    }
////
////    // 문자열 인수를 받는 생성자
////    public Diary(String errorMessage) {
////        this.errorMessage = errorMessage;
////    }
////
////    // 에러 메시지를 반환하는 getter
////    public String getErrorMessage() {
////        return errorMessage;
////    }
////
////    // Getters and Setters
////    public Long getId() {
////        return id;
////    }
////
////    public void setId(Long id) {
////        this.id = id;
////    }
////
////    public String getTitle() {
////        return title;
////    }
////
////    public void setTitle(String title) {
////        this.title = title;
////    }
////
////    public String getContent() {
////        return content;
////    }
////
////    public void setContent(String content) {
////        this.content = content;
////    }
////
////    public String getEmotion() {
////        return emotion;
////    }
////
////    public void setEmotion(String emotion) {
////        this.emotion = emotion;
////    }
////
////    public List<byte[]> getImages() {
////        return images;
////    }
////
////    public void setImages(List<byte[]> images) {
////        this.images = images;
////    }
////
////    public List<String> getBase64Images() {
////        return base64Images;
////    }
////
////    public void setBase64Images(List<String> base64Images) {
////        this.base64Images = base64Images;
////    }
////
////    public Long getUserId() {
////        return userId;
////    }
////
////    public void setUserId(Long userId) {
////        this.userId = userId;
////    }
////
////    public LocalDateTime getCreatedAt() {
////        return createdAt;
////    }
////
////    public void setCreatedAt(LocalDateTime createdAt) {
////        this.createdAt = createdAt;
////    }
////    
////    public List<String> getTags() {
////        return tags;
////    }
////
////    public void setTags(List<String> tags) {
////        this.tags = tags;
////    }
////}
//import java.time.LocalDateTime;
//import java.util.ArrayList;
//import java.util.List;
//
//import jakarta.persistence.CollectionTable;
//import jakarta.persistence.Column;
//import jakarta.persistence.ElementCollection;
//import jakarta.persistence.Entity;
//import jakarta.persistence.GeneratedValue;
//import jakarta.persistence.GenerationType;
//import jakarta.persistence.Id;
//import jakarta.persistence.JoinColumn;
//import jakarta.persistence.Lob;
//import jakarta.persistence.Transient;
//
//@Entity
//public class Diary {
//    @Id
//    @GeneratedValue(strategy = GenerationType.IDENTITY)
//    private Long id;
//
//    private String title;
//
//    @Column(columnDefinition = "TEXT")
//    private String content;
//
//    private String emotion;
//
//    @ElementCollection
//    @CollectionTable(name = "diary_images", joinColumns = @JoinColumn(name = "diary_id"))
//    @Column(name = "image_path")
//    private List<String> imagePaths = new ArrayList<>();
//
//    @Transient
//    private List<String> base64Images = new ArrayList<>();
//
//    private Long userId;
//
//    @ElementCollection
//    @CollectionTable(name = "tags", joinColumns = @JoinColumn(name = "diary_id"))
//    @Column(name = "tag")
//    private List<String> tags = new ArrayList<>();
//
//    @Column(name = "created_at")
//    private LocalDateTime createdAt;
//
//    private String errorMessage;
//
//    public Diary() {
//    }
//
//    public Diary(String errorMessage) {
//        this.errorMessage = errorMessage;
//    }
//
//    public String getErrorMessage() {
//        return errorMessage;
//    }
//
//    public Long getId() {
//        return id;
//    }
//
//    public void setId(Long id) {
//        this.id = id;
//    }
//
//    public String getTitle() {
//        return title;
//    }
//
//    public void setTitle(String title) {
//        this.title = title;
//    }
//
//    public String getContent() {
//        return content;
//    }
//
//    public void setContent(String content) {
//        this.content = content;
//    }
//
//    public String getEmotion() {
//        return emotion;
//    }
//
//    public void setEmotion(String emotion) {
//        this.emotion = emotion;
//    }
//
//    public List<String> getImagePaths() {
//        return imagePaths;
//    }
//
//    public void setImagePaths(List<String> imagePaths) {
//        this.imagePaths = imagePaths;
//    }
//
//    public List<String> getBase64Images() {
//        return base64Images;
//    }
//
//    public void setBase64Images(List<String> base64Images) {
//        this.base64Images = base64Images;
//    }
//
//    public Long getUserId() {
//        return userId;
//    }
//
//    public void setUserId(Long userId) {
//        this.userId = userId;
//    }
//
//    public LocalDateTime getCreatedAt() {
//        return createdAt;
//    }
//
//    public void setCreatedAt(LocalDateTime createdAt) {
//        this.createdAt = createdAt;
//    }
//
//    public List<String> getTags() {
//        return tags;
//    }
//
//    public void setTags(List<String> tags) {
//        this.tags = tags;
//    }
//}
package com.example.AI_Diary.model;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

import jakarta.persistence.CollectionTable;
import jakarta.persistence.Column;
import jakarta.persistence.ElementCollection;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.Lob;
import jakarta.persistence.Transient;

@Entity
public class Diary {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    private String title;

    @Column(columnDefinition = "TEXT")
    private String content;

    private String emotion;

    @Lob
    @Column(name = "images")
    private List<byte[]> images;
    
    @Transient
    private List<String> base64Images = new ArrayList<>();
    
    private Long userId;
    
    @ElementCollection
    @CollectionTable(name = "diary_tags", joinColumns = @JoinColumn(name = "diary_id"))
    @Column(name = "tag")
    private List<String> tags;

    @Column(name = "created_at")
    private LocalDateTime createdAt;
    
    private String errorMessage;

    public Diary() {}

    public Diary(String errorMessage) {
        this.errorMessage = errorMessage;
    }

    public String getErrorMessage() {
        return errorMessage;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public String getContent() {
        return content;
    }

    public void setContent(String content) {
        this.content = content;
    }

    public String getEmotion() {
        return emotion;
    }

    public void setEmotion(String emotion) {
        this.emotion = emotion;
    }

    public List<byte[]> getImages() {
        return images;
    }

    public void setImages(List<byte[]> images) {
        this.images = images;
    }

    public List<String> getBase64Images() {
        return base64Images;
    }

    public void setBase64Images(List<String> base64Images) {
        this.base64Images = base64Images;
    }

    public Long getUserId() {
        return userId;
    }

    public void setUserId(Long userId) {
        this.userId = userId;
    }

    public LocalDateTime getCreatedAt() {
        return createdAt;
    }

    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    public List<String> getTags() {
        return tags;
    }

    public void setTags(List<String> tags) {
        this.tags = tags;
    }
}
